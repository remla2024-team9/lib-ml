name: Release to PyPI with Automated Versioning

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'  # This regex matches semantic versioning like v1.0.1

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '~3.10'

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.3'

      - name: Install Dependencies
        run: poetry install

      - name: Parse version info from tag
        run: |
          VERSION=${GITHUB_REF:11}
          MAJOR=`echo "$VERSION" | cut -d '.' -f 1`
          MINOR=`echo "$VERSION" | cut -d '.' -f 2`
          PATCH=`echo "$VERSION" | cut -d '.' -f 3`
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Update pyproject.toml with new version
        run: |
          poetry version ${{ env.version }}  # Updates version in pyproject.toml

      - name: Build and Publish to PyPI
        run: poetry publish --build
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
